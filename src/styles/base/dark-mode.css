/**
 * 深色模式切换 (Dark Mode Toggle)
 * Weather App Design System
 */

/* ========== 深色模式平滑过渡 (Smooth Transition) ========== */
html {
  color-scheme: light;
}

html[data-theme="dark"] {
  color-scheme: dark;
}

/* ========== 系统偏好自动切换 (System Preference Auto Toggle) ========== */
/* 如果用户没有手动设置主题，则跟随系统偏好 */
@media (prefers-color-scheme: dark) {
  html:not([data-theme]) {
    color-scheme: dark;
  }
  
  html:not([data-theme]) body {
    --color-primary: #60A5FA;
    --color-primary-light: #93C5FD;
    --color-primary-dark: #3B82F6;
    --color-background: #0F172A;
    --color-surface: #1E293B;
    --color-surface-variant: #334155;
    --color-text-primary: #F1F5F9;
    --color-text-secondary: #94A3B8;
    --color-text-disabled: #64748B;
    --color-text-inverse: #0F172A;
    --color-border: #334155;
    --color-divider: #1E293B;
    --color-sunny: #FCD34D;
    --color-cloudy: #9CA3AF;
    --color-rainy: #60A5FA;
    --color-snowy: #BAE6FD;
    --color-stormy: #818CF8;
    --color-success: #34D399;
    --color-warning: #FBBF24;
    --color-error: #F87171;
    --color-info: #60A5FA;
  }
}

/* ========== 深色模式切换工具类 (Dark Mode Toggle Utility) ========== */
/**
 * 使用方法 (Usage):
 * 
 * JavaScript:
 * ```javascript
 * // 切换深色模式
 * document.documentElement.setAttribute('data-theme', 'dark');
 * 
 * // 切换浅色模式
 * document.documentElement.setAttribute('data-theme', 'light');
 * 
 * // 移除属性，跟随系统偏好
 * document.documentElement.removeAttribute('data-theme');
 * 
 * // 检测当前主题
 * const theme = document.documentElement.getAttribute('data-theme');
 * 
 * // 检测系统偏好
 * const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
 * 
 * // 监听系统偏好变化
 * window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
 *   if (!document.documentElement.hasAttribute('data-theme')) {
 *     // 如果用户没有手动设置，则跟随系统
 *     console.log(e.matches ? 'System switched to dark mode' : 'System switched to light mode');
 *   }
 * });
 * ```
 * 
 * TypeScript (Angular):
 * ```typescript
 * export class ThemeService {
 *   toggleTheme(): void {
 *     const currentTheme = document.documentElement.getAttribute('data-theme');
 *     const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
 *     document.documentElement.setAttribute('data-theme', newTheme);
 *     localStorage.setItem('theme', newTheme);
 *   }
 * 
 *   loadTheme(): void {
 *     const savedTheme = localStorage.getItem('theme');
 *     if (savedTheme) {
 *       document.documentElement.setAttribute('data-theme', savedTheme);
 *     }
 *   }
 * }
 * ```
 */

